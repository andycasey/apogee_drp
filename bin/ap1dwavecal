#!/usr/bin/env python
# encoding: utf-8
#
# @Author: David Nidever, Jon Holtzman
# @Date: August 2021
# @Filename: ap1dwavecal
# @License: BSD 3-Clause
# @Copyright: David Nidever, Jon Holtzman
# mostly a copy of apskywavecal

# This performs what apskywavecal used to, but also handles the case if we want to use FPI fibers.

from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
from __future__ import unicode_literals

import argparse
import datetime
import time
import os
import sys
import subprocess
import matplotlib
import numpy as np
import pdb
matplotlib.use('Agg')

from apogee_drp.apred import wave, fpi

if __name__ == '__main__' :

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Adjust wavelength solution based on sky or FPI lines')

    parser.add_argument("planfile", type=str, help='Planfile for visit reduction')
    parser.add_argument("--waveid", type=int, help='ID for wavecal', default=None)
    parser.add_argument("--fpiid", type=int, help='ID for FPI', default=None)    
    parser.add_argument("--skyfile", type=str, help='Sky lines file', default='airglow')
    parser.add_argument("--nosky", help='No sky correction', action='store_true')
    parser.add_argument("--frameid", type=int, help='Override for single frame', default=None)
    parser.add_argument("--apred", type=str, help='apred_vers for single frame', default='current')
    parser.add_argument("--telescope", type=str, help='telescope for single frame', default='apo25m')
    parser.add_argument('--clobber', help='Overwrite files?',action="store_true")
    parser.add_argument("--flag",default='11111')

    args=parser.parse_args()

    now = datetime.datetime.now()
    start = time.time()
    print ("Start: ",now.strftime("%Y-%m-%d %H:%M:%S"))
    # Sky lines
    if args.fpiid == None:
        if args.frameid == None:
            wave.skycal(args.planfile,waveid=args.waveid,skyfile=args.skyfile,nosky=args.nosky)
        else :
            wave.getskywave(args.frameid,args.waveid,vers=args.apred,telescope=args.telescope)
    # FPI lines
    else:
        if args.frameid == None:
            fpi.fpi1dwavecal(planfile=args.planfile,waveid=args.waveid,fpiid=args.fpiid)
        else :
            fpi.fpi1dwavecal(frameid=args.frameid,args.waveid,fpiid=args.fpiid,vers=args.apred,telescope=args.telescope)        
    now = datetime.datetime.now()
    print ("End: ",now.strftime("%Y-%m-%d %H:%M:%S"))
    print("elapsed: ",time.time()-start)
